jsono 관련 디펜던시
jackson-databind 2.5.4
다운
json 지원을 하는 jar  . json 자바스크립트에서 객체를 표현하는 방법 . 

 

=================================================================================================

바인딩 하는 다른 방법
homecontroller작성 

return이 "redirect:/***"; 일경우 

1. 넘어갈때 주소창에 보인다 (QueryString형태): Model model -> model.addAttribute("msg", "~~~~~~~");

2. 넘어갈때  RedirectAttributes rtts ->  rtts.addFlashAttribute("str2", "who");

=================================================================================================

AjaxTestController

데이터 1,2,3,4
2가 무겁다면

1전송 2전송 3전송 순차적 전송방식 - 동기식 전송방법
1전송 2전송(전송중 - 후순위 전송) - 비동기식 전송방법
-가볍다

일반적인 Ajax구현 - viewpage에서 구현
-Spring에서는 web-inf에 있기에 불가능
컨트롤러를 통해서 한다.
=================================================================================================

at1.jsp Ajax구현

jquery기본 코드
$(document).ready(function(){}); 작성 후 내부에 작성

$("button") 대상 .click(function(){}); <-이벤트핸들러
내부에
$.ajax({}); 내부에 전송type/url/datatype-통신하고 넘겨받을/
data{두개이상들어갈 수 있으니 중괄호로 묶는다.(속성값이 숫자라면 ''로 감싸지 않는다.-json형태}/
-JavaScript에서 객체를 생성 할 수 있는 방법
	1.Object class를 이용해 객체 생성
	2.function keyword를 이용 class생성 그 클래스를 이용해 객체 생성
	3.JSON(javaScaript Object Notation) - var obj = JSON.parse(result);
						객체접근 obj.id
success - 속성값으로  (result) 받아온 데이터를 넣은 function을 넣는다.
error - 마찬가지로 (request, status, error)를 function안에 넣어야한다.
속성: 속성값을 넣고 ,(구분자)를 넣는다.
complete - function()에 아무것도 넣지 않고 작성 - 실패하던 성공하던 실행
error : function(request, status, error){
console.log("code"+request.status+"\n"+"msg: " + request.responseText+"\n"+"error: "+error);
} - 자주사용	

=================================================================================================

이런식으로 작성을 했다면  ajaxcontroller에서
이 데이터를 받알 수 있는 mvc 핸들러를 만들어 데이터를 받고 넘겨준다.
해당 핸들러에는 @ResponseBody 어노테이션을 붙여준다.
=================================================================================================

$() 선택자 선정할때 
이를 이용
var msg = $("p").text(); <- p태그의 text를 받아와서 msg에 넣는것
$("p").text(result); p태그의 text에 result 입력
=================================================================================================

배열을 Ajax에서 보낼 땐 Ajax 속성에 traditional : true, 를 추가해야한다.

list를 사용하기 위해선 문자열로 변환하여 보내줘야하는데
이는 JACKSON bind 사용
이를 위해 받아온 데이터를 ObjectMapper의 writevalueasstring method를 이용 문자열로 변환 후 pageContext에 바인딩하여 활용

이를 보낼때는
listStr : JSON.stringify(${listStr})  방식을 활용한다.
이 listStr을 controller에서 받으면 map으로 문자열이 출력되는데 이를 이용하기 위해 
@RequestParam 어노테이션을 붙인 Map 형태로 jsp에서 보내온 listStr을 받고 이 데이터를 뽑아내 tostring method를 통해 문자열로 변환 시킨 뒤 ObjectMapper의 readvalue method를 활용 다시 list로 변환시킨다.