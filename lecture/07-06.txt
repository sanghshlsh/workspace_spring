page처리할떄는
pageTO에 generic type <T>를 추가해줘야 한다,

page처리를 위해
session.selectList(statement, parameter, rowBounds);
를 한다면
parameter에는 null-> 이것은 검색을 할 떄 사용한다
rowbounds ->객체만들어서 사용
RowBounds rowBounds = new RowBounds(offset, limit)
offset - 어디서부터	(0부터시작)
limit - 몇개

참고
#{23}->23
#{홍길동}->'홍길동'
${홍길동}->홍길동

검색시 dao에서 parameter에 여러 객체를 넣어야 한다면class를 이용하거나 map을 이용한다.
map을 mabatis에서 사용할때도 같은방식으로 사용한다.
mapper에서 컬럼을 변수로 줄 때는 #{}를 사용하지 않고 ${}를 사용한다.
->위험한 방법이어서 자주 사용하는 방법은 아니다.

mabatis에서 %를 넣은 방법은 orcle과 같다 || 를사용
'%'||#{keyword}||'%'
======================================================================

일반적으로 transaction 작업은 service에서 수행한다.
하지만 transaction 작업은 CUD	/	R은 포함되지않는다.
R은 어디에서 하던 상관없다.
자신의 기준에 맞춰서 하라.

=====================================================================
검색을 구현할 때는
getbootstrap.com의 Buttons with dropdowns-component를 이용하라

mybatis의
sql 태그
sql문을 include하는 태그(부분부분 사용가능)

sql태그 내 if태그로 조건을걸어 include로 불러온다.

cData 태그

boardmapper의
<select id="test" resultType="BoardVO"></select>
스프링이전 사용법
select * from (select rownum rnum, bno, title, content, writer, viewcnt, regDate from
		(select * from board <include refid="search"></include> order by bno desc)
		) where rnum between #{startNum} and #{endNum}
이런 sql문은 sql문이 너무 길어 중간에 끊길 위험이 있는데 이는
<!<CDATA[		]]><include~~~</><!<CDATA[		]]>
<!<CDATA[]]>로 묶어준다.

=========================================================================
검색 -> 글 클릭 -> 목록시
검색화면으로 그대로 돌아오게
정석 -  read.jsp를 동적으로 만들어 알아서 가게끔
편법 - sRead.jsp 작성